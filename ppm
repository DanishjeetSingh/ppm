#!/bin/bash

VERSION="1.0"

show_help() {
    echo "Usage: ppm <python_file> [args...]"
    echo
    echo "Options:"
    echo "  -h    Display this help message and exit"
    echo "  -v    Display version information and exit"
}

show_version() {
    echo "ppm version $VERSION"
}


if [ "$1" == "-h" ]; then
    show_help
    exit 0
elif [ "$1" == "-v" ]; then
    show_version
    exit 0
elif [ -z "$1" ]; then
    show_help
    exit 1
fi


python_file="$1"
shift
additional_args="$@"

if [[ ! "$python_file" =~ \.py$ ]]; then
    echo "Error: '$python_file' is not a Python file."
    exit 1
elif [ ! -f "$python_file" ]; then
    echo "Error: Python file '$python_file' does not exist."
    exit 1
fi

recipient_email="$PPM_EMAIL"

if [ -z "$recipient_email" ]; then
    echo "Error: Email address not set. Please set the PPM_EMAIL environment variable."
    exit 1
fi

if ! command -v mailx &> /dev/null; then
    echo "Error: mailx is not installed. Please install it and configure it properly."
    exit 1
fi

temp_output=$(mktemp)

python "$python_file" "$@" 2>&1 | tee "$temp_output"
exit_status=${PIPESTATUS[0]}

output=$(cat "$temp_output")

rm "$temp_output"

subject=$( [ $exit_status -eq 0 ] && echo "Success: $python_file $additional_args" || echo "Error: $python_file $additional_args" )

log_file=$(echo "$output" | tac | grep -oP '\S+\.log' | head -n 1)

if [ -f "$log_file" ]; then
    echo -e "$output" | mailx -s "$subject" -A "$log_file" "$recipient_email"
else
    if [ -n "$log_file" ]; then
        output="$output\n\nWarning: Log file path found but the file does not exist: $log_file"
    fi
    echo -e "$output" | mailx -s "$subject" "$recipient_email"
fi
